var Int cnt
var Int q

inp Int env_cnt
inp Int success

SPECIFICATION

assume {
  eq i0() q;
}

always assume {
    (eq success i0()) || (eq success i1())
}

always guarantee {
  (eq q i0()) -> ([cnt <- env_cnt] && [q <- i1()]);
  [cnt <- sub cnt i1()] -> ((eq q i1()) && (eq success i1()) && [q <- q]);
  ([cnt <- sub cnt i1()] || [cnt <- cnt]);
  ([q <- i0()] || [q <- i1()]);
  (G F (eq success i1())) -> G (((eq q i1()) && [q <- i0()]) -> (eq cnt i0()));
}
