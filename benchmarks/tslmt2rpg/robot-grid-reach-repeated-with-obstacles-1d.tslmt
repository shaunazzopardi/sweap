var Int i_x
var Int loc

inp Int env_in
inp Int obstacle

SPECIFICATION

assume {
    (gte env_in i0());
    (eq loc i0());
}

always guarantee{
((eq loc i0()) && (eq i_x i0())) -> (([loc  <- i1()]));
((eq loc i0()) && (!(eq i_x i0()))) -> ([loc  <- i0()] &&
                                            (((lte obstacle i0()) && ([i_x <- (add i_x i1())] || [i_x <- (sub i_x i1())])) ||
                                             ((gte obstacle i0()) && [i_x <- i_x])));
((eq loc i1())) -> (X ([loc <- i0()] && [i_x <- env_in]));
}

guarantee { (G F (lte obstacle i0())) -> G F((eq loc i1()));}

