program robot-grid-reach-repeated-with-obstacles-6d {
    STATES {
        setvars: init, move, goal
    }

    ENVIRONMENT EVENTS {
        ea, eb, ec, ee, ed, ef, estop
    }

    CONTROLLER EVENTS {
        ca, cb, cc, cd, ce, cf, cstop
    }

    VALUATION {
        a : integer := 0;
        b : integer := 0;
        c : integer := 0;
        d : integer := 0;
        e : integer := 0;
        f : integer := 0;
    }

    TRANSITIONS {
        setvars -> setvars [!estop $ a := a + 1 if ea;
                              a := a - 1 if !ea;
                              b := b + 1 if eb;
                              b := b - 1 if !eb;
                              c := c + 1 if ec;
                              c := c - 1 if !ec;
                              d := d + 1 if ed;
                              d := d - 1 if !ed;
                              e := e + 1 if ee;
                              e := e - 1 if !ee;
                              f := f + 1 if ef;
                              f := f - 1 if !ef],
        setvars -> move [estop],

        goal -> setvars [],
        move -> goal [!(a == 0 & b == 0 & c == 0 & d == 0 & e == 0 & f == 0)],
        move -> move [!(a == 0 & b == 0 & c == 0 & d == 0 & e == 0 & f == 0) && !estop
                            $ a := a + 1 if ca;
                              a := a - 1 if !ca;
                              b := b + 1 if cb;
                              b := b - 1 if !cb;
                              c := c + 1 if cc;
                              c := c - 1 if !cc;
                              d := d + 1 if cd;
                              d := d - 1 if !cd;
                              e := e + 1 if ce;
                              e := e - 1 if !ce;
                              f := f + 1 if cf;
                              f := f - 1 if !cf]
    }

    SPECIFICATION {
        (G F !estop) -> G F goal
    }
}