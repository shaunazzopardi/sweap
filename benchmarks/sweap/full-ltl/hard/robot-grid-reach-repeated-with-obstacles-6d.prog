program robot-grid-reach-with-obstacles-2d {
    STATES {
        setvars: init, move, goal
    }

    ENVIRONMENT EVENTS {
        e1, e2, e3, e4
    }

    CONTROLLER EVENTS {
        c1, c2, c3, c4
    }

    VALUATION {
        x1 : integer := 0;
        x2 : integer := 0;
        x3 : integer := 0;
        x4 : integer := 0;
        x5 : integer := 0;
        x6 : integer := 0;
    }

    TRANSITIONS {
        setvars -> setvars [!e1 && !e2 && !e3 && !e4 $ x1 := x1 + 1],
        setvars -> setvars [!e1 && !e2 && !e3 && e4 $ x1 := x1 - 1],
        setvars -> setvars [!e1 && !e2 && e3 && !e4 $ x2 := x2 + 1],
        setvars -> setvars [!e1 && !e2 && e3 && e4 $ x2 := x2 - 1],
        setvars -> setvars [!e1 && e2 && !e3 && !e4 $ x3 := x3 + 1],
        setvars -> setvars [!e1 && e2 && !e3 && e4 $ x3 := x3 - 1],
        setvars -> setvars [!e1 && e2 && e3 && !e4 $ x4 := x4 + 1],
        setvars -> setvars [!e1 && e2 && e3 && e4 $ x4 := x4 - 1],
        setvars -> setvars [e1 && !e2 && !e3 && !e4 $ x5 := x5 + 1],
        setvars -> setvars [e1 && !e2 && !e3 && e4 $ x5 := x5 - 1],
        setvars -> setvars [e1 && !e2 && e3 && !e4 $ x6 := x6 + 1],
        setvars -> setvars [e1 && !e2 && e3 && e4 $ x6 := x6 - 1],
        setvars -> setvars [e1 && e2 && !e3 && !e4 $ x6 := x6 - 1],
        setvars -> setvars [e1 && e2 && !e3 && e4 $ x6 := x6 - 1],
        setvars -> setvars [e1 && e2 && e3 && !e4],

        setvars -> move [e1 && e2 && e3 && e4],

        goal -> setvars [],
        move -> goal [x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && !c2 && !c3 && !c4 $ x1 := x1 + 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && !c2 && !c3 && c4 $ x1 := x1 - 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && !c2 && c3 && !c4 $ x2 := x2 + 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && !c2 && c3 && c4 $ x2 := x2 - 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && c2 && !c3 && !c4 $ x3 := x3 + 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && c2 && !c3 && c4 $ x3 := x3 - 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && c2 && c3 && !c4 $ x4 := x4 + 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && !c1 && c2 && c3 && c4 $ x4 := x4 - 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && c1 && !c2 && !c3 && !c4 $ x5 := x5 + 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && c1 && !c2 && !c3 && c4 $ x5 := x5 - 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && c1 && !c2 && c3 && !c4 $ x6 := x6 + 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && c1 && !c2 && c3 && c4 $ x6 := x6 - 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && c1 && c2 && !c3 && !c4 $ x6 := x6 - 1],
        move -> move [!e1 && !(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && c1 && c2 && !c3 && c4 $ x6 := x6 - 1],
        move -> move [!(x1 == 0 && x2 == 0 && x3 == 0 && x4 == 0 && x5 == 0 && x6 == 0) && (e1 || (c1 && c2 && c3 && !c4))]
    }

    SPECIFICATION {
        ((G F !(move & e1)) && G F move) -> G F goal
    }
}