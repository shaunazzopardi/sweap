program arbiter-paper {
    STATES {
        init_st : init, goal, sink, setinp
    }

    ENVIRONMENT EVENTS {
        inc, stop
    }

    CONTROLLER EVENTS {
        cinc, setc
    }

    VALUATION {
        x : int := 0;
        y : int := 0;
        c : int := 0;
        l : nat := 0;
    }

    TRANSITIONS {
        init_st -> goal [$ c := 0],
        sink -> sink [],
        goal -> sink [l == 0 & c == 1],
        goal -> setinp [l == 0 & c != 1],
        setinp -> setinp [inc & !stop $ y := y + 1],
        setinp -> setinp [!inc & !stop $ y := y - 1],
        setinp -> goal [stop $ x := y; l := 1],

        goal -> goal [x == 0 && l > 0 $ x := y; l := l - 1],
        goal -> goal [x != 0 & cinc & !setc $ x := x + 1],
        goal -> goal [x != 0 & !cinc & !setc $ x := x - 1],
        goal -> goal [x != 0 & setc $ c := 1]
    }

    SPECIFICATION {
        (G F !setinp) -> G F (goal && l == 0)
    }
}