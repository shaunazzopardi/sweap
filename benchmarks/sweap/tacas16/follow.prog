program follow {
    STATES {
        move0: init, move1
    }

    ENVIRONMENT EVENTS {
        incx, incy, stax, stay
    }

    CONTROLLER EVENTS {
       a, b, c, d
    }

    VALUATION {
        x0 : integer := 0;
        y0 : integer := 0;
        x1 : integer := 0;
        y1 : integer := 0;
    }

    TRANSITIONS {
        move0 -> move1 [d],
        move0 -> move1 [a & !b & !c & !d $ x0 := x0 + 1],
        move0 -> move1 [!a & b & !c & !d $ x0 := x0 + 1; y0 := y0 + 1],
        move0 -> move1 [!a & !b & c & !d $ x0 := x0 + 1; y0 := y0 - 1],
        move0 -> move1 [a & b & !c & !d $ y0 := y0 + 1],
        move0 -> move1 [!a & b & c & !d $ y0 := y0 - 1],
        move0 -> move1 [a & !b & c & !d $ x0 := x0 - 1],
        move0 -> move1 [!a & !b & !c & !d $ x0 := x0 - 1; y0 := y0 + 1],
        move0 -> move1 [a & b & c & !d $ x0 := x0 - 1; y0 := y0 - 1],

        move1 -> move0 [!stax && stay && incx && !incy $ x1 := x1 + 1],
        move1 -> move0 [!stax && stay && !incx && !incy $ x1 := x1 - 1],
        move1 -> move0 [!stax && !stay && incy && incx $ x1 := x1 + 1; y1 := y1 + 1],
        move1 -> move0 [!stax && !stay && !incy && incx $ x1 := x1 + 1; y1 := y1 - 1],
        move1 -> move0 [!stax && !stay && incy && !incx $ x1 := x1 - 1; y1 := y1 + 1],
        move1 -> move0 [!stax && !stay && !incy && !incx $ x1 := x1 - 1; y1 := y1 - 1],
        move1 -> move0 [stax && !stay && incy && !incx $ y1 := y1 + 1],
        move1 -> move0 [stax && !stay && !incy && !incx $ y1 := y1 - 1],
        move1 -> move0 [stax && stay]
    }

    SPECIFICATION {
        (G ((!(0 <= x0 - x1) || !(0 <= y0 - y1) || !(((x0 - x1) + (y0 - y1)) > 2)) &&
            (!(0 <= x1 - x0) || !(0 <= y1 - y0) || !(((x1 - x0) + (y1 - y0)) > 2)) &&
            (!(0 <= x0 - x1) || !(0 <= y1 - y0) || !(((x0 - x1) + (y1 - y0)) > 2)) &&
            (!(0 <= x1 - x0) || !(0 <= y0 - y1) || !(((x1 - x0) + (y0 - y1)) > 2))))
    }
}