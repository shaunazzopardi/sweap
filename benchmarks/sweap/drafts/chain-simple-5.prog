program arbiter-paper {
    STATES {
        init_st : init, goal, sink, setinp, l1, l2, l3, l4, l5,
    }

    ENVIRONMENT EVENTS {
        inc, stop
    }

    CONTROLLER EVENTS {
        cinc, setc
    }

    VALUATION {
        x : int := 0;
        y : int := 0;
        c : int := 0;
    }

    TRANSITIONS {
        init_st -> goal [$ c := 0],
        sink -> sink [],
        goal -> sink [c == 1],
        goal -> setinp [c != 1],
        setinp -> setinp [inc & !stop $ y := y + 1],
        setinp -> setinp [!inc & !stop $ y := y - 1],
        setinp -> l1 [stop $ x := y],

        l1 -> l2 [x == 0 $ x := y],
        l1 -> l1 [x != 0 & cinc & !setc $ x := x + 1],
        l1 -> l1 [x != 0 & !cinc & !setc $ x := x - 1],
        l1 -> goal [x != 0 & setc $ c := 1],

        l2 -> l3 [x == 0 $ x := y],
        l2 -> l2 [x != 0 & cinc & !setc $ x := x + 1],
        l2 -> l2 [x != 0 & !cinc & !setc $ x := x - 1],
        l2 -> goal [x != 0 & setc $ c := 1],

        l3 -> l4 [x == 0 $ x := y],
        l3 -> l3 [x != 0 & cinc & !setc $ x := x + 1],
        l3 -> l3 [x != 0 & !cinc & !setc $ x := x - 1],
        l3 -> goal [x != 0 & setc $ c := 1],

        l4 -> l5 [x == 0 $ x := y],
        l4 -> l4 [x != 0 & cinc & !setc $ x := x + 1],
        l4 -> l4 [x != 0 & !cinc & !setc $ x := x - 1],
        l4 -> goal [x != 0 & setc $ c := 1],

        l5 -> goal [x == 0 $ x := y],
        l5 -> l5 [x != 0 & cinc & !setc $ x := x + 1],
        l5 -> l5 [x != 0 & !cinc & !setc $ x := x - 1],
        l5 -> goal [x != 0 & setc $ c := 1]
    }

    SPECIFICATION {
        (G F !setinp) -> G F goal
    }
}