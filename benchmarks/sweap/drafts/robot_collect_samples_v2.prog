program robot_collect_samples_v1 {
    STATES {
        base : init, collectSamples, move
    }

    ENVIRONMENT EVENTS {
        einc
    }

    CONTROLLER EVENTS {
        a, b
    }

    VALUATION {
        samples : integer := 0;
        reqSamples : integer := 0;
        trackPos : integer := 0;
        task : integer := 0;
    }

    TRANSITIONS {
        move -> move [trackPos == 23 & task == 1 & !a & b $ trackPos := trackPos + 1],
        move -> move [trackPos == 23 & task == 1 & !a & !b $ trackPos := trackPos - 1],
        move -> base [trackPos == 23 & task == 1 & a],

        move -> move [trackPos == 12 & !a & b $ trackPos := trackPos + 1],
        move -> move [trackPos == 12 & !a & !b $ trackPos := trackPos - 1],
        move -> collectSamples [trackPos == 12 & a],

        move -> move [trackPos != 12 & !(trackPos == 23 & task == 1) & a $ trackPos := trackPos + 1],
        move -> move [trackPos != 12 & !(trackPos == 23 & task == 1) & !a $ trackPos := trackPos - 1],

        moveToBase -> base [trackPos == 23 $ samples := 0; reqSamples := 0],
        moveToBase -> moveToBase [a && trackPos != 23],
        moveToBase -> moveToBase [!a & b & trackPos != 23 $ trackPos := trackPos + 1],
        moveToBase -> moveToBase [!a & !b & trackPos != 23 $ trackPos := trackPos - 1],

        base -> base [einc $ reqSamples := reqSamples + 1],
        base -> move [!einc & reqSamples > 0 $ task := 0],

        collectSamples -> collectSamples [samples < reqSamples $ samples := samples + 1],
        collectSamples -> move [!(samples < reqSamples) $ task := 1]
    }

    SPECIFICATION {
        G F base
    }
}