program robot_analyze_samples_v1 {
    STATES {
        moveToBase : init, base, moveToSampleSide, collectSamples, moveToLab, lab
    }

    ENVIRONMENT EVENTS {
        inc
    }

    CONTROLLER EVENTS {
        a, b
    }

    VALUATION {
        samples : integer := 0;
        reqSamples : integer := 0;
        trackPos : integer := 0;
    }

    TRANSITIONS {
        moveToBase -> base [trackPos == 23 $ samples := 0; reqSamples := 0],
        moveToBase -> moveToBase [a && trackPos != 23],
        moveToBase -> moveToBase [!a & b & trackPos != 23 $ trackPos := trackPos + 1],
        moveToBase -> moveToBase [!a & !b & trackPos != 23 $ trackPos := trackPos - 1],

        base -> moveToSampleSide [!inc & reqSamples > 0],
        base -> base [inc $ reqSamples := reqSamples + 1],

        moveToSampleSide -> collectSamples [trackPos == 12],
        moveToSampleSide -> moveToSampleSide [!a & b & trackPos != 12 $ trackPos := trackPos + 1],
        moveToSampleSide -> moveToSampleSide [!a & !b & trackPos != 12 $ trackPos := trackPos - 1],
        moveToSampleSide -> moveToSampleSide [a & trackPos != 12],

        collectSamples -> collectSamples [samples < reqSamples $ samples := samples + 1],
        collectSamples -> moveToLab [!(samples < reqSamples)],

        moveToLab -> lab [trackPos == -1],
        moveToLab -> moveToLab [!a & b & trackPos != -1 $ trackPos := trackPos + 1],
        moveToLab -> moveToLab [!a & !b & trackPos != -1 $ trackPos := trackPos - 1],
        moveToLab -> moveToLab [a & trackPos != -1],

        lab -> lab [samples > 0 $ samples := samples - 1],
        lab -> moveToBase [!(samples > 0)]
    }

    SPECIFICATION {
        G F base
    }
}