program robot-to-target-charging {
    STATES {
        setDistToTarget: init, q
    }
    ENVIRONMENT EVENTS {
        ed1, ed2
    }
    CONTROLLER EVENTS {
        c
    }
    VALUATION {
        cDist : integer := 0;
        battery : integer := 0;
        atStation : bool := true;
        distToTarget : integer := 0;
    }
    TRANSITIONS {
        setDistToTarget -> setDistToTarget [ed1 $ distToTarget := distToTarget + 1],
        setDistToTarget -> setDistToTarget [!ed1 & ed2 $ distToTarget := distToTarget - 1],
        setDistToTarget -> q [!ed1 & !ed2 && distToTarget >= 50 && distToTarget <= 70 $ cDist := distToTarget; atStation := true],

        q -> q [atStation && (battery < cDist) $ atStation := true; battery := battery + 1],
        q -> q [atStation && (battery >= cDist) & c $ atStation := false; cDist := cDist - 1; battery := battery - 1],
        q -> q [atStation && (battery >= cDist) & !c $ atStation := false;],
        q -> q [!atStation && !(cDist <= 0) $ atStation := false; cDist := cDist - 1; battery := battery - 1],
        q -> q [!atStation && (cDist <= 0) $ atStation := false]
    }

    SPECIFICATION {
        (F q) -> (!q U (q &&
            G (battery <= 100) &&
            G (battery >= 0) &&
            F (cDist <= 0)
        ))
    }
}


