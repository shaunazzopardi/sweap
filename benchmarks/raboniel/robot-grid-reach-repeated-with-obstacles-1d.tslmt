//-- State: i_x, loc
//--Inputs: obstacle, env_in

assume {
    (ge env_in i0());
}

guarantee {
[loc  <- i0()];
}

always guarantee{

([loc  <- i0()] && (eq i_x i0())) -> ((X [loc  <- i1()]));
([loc  <- i0()] && (! (eq i_x i0()))) -> (X [loc  <- i0()] && (((le obstacle i0()) && ([i_x <- (add i_x i1())] || [i_x <- (sub i_x i1())])) || ((ge obstacle i0()) && [i_x <- i_x])));

([loc  <- i1()]) -> (X ([loc <- i0()] && [i_x <- env_in]));
}

guarantee { (G F (le obstacle i0())) -> G F([loc  <- i1()]);}

