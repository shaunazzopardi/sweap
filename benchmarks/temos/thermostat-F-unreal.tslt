#LIA
//-- State:  temp, mode 
//-- Inputs: sense

// target temp range
LBOUND = int20();
UBOUND = int25();

inRangeSense = ((gte sense LBOUND) && (lte sense UBOUND));
inRangeTemp = ((gte temp LBOUND) && (lte temp UBOUND));

// temp change
TUNIT = int1();

// modes
OFF = int0();
HEAT = int1();
COOL = (sub int0() int1());

modeOFF = (eq mode OFF);
modeHEAT = (gte mode HEAT);
modeCOOL = (lte mode COOL);


always guarantee {
    
    // mode switching
    (modeOFF && !inRangeSense) -> ([mode <- HEAT] || [mode <- COOL]);  
    (modeOFF && inRangeSense) ->  [mode <- OFF];  
    (!modeOFF && !inRangeTemp) -> [mode <- mode];
    (!modeOFF && inRangeTemp)  -> [mode <- OFF];
    
    // temp control
    modeOFF -> [temp <- sense];
    (modeHEAT && !inRangeTemp) -> [temp <- add temp TUNIT];
    (modeCOOL && !inRangeTemp) -> [temp <- sub temp TUNIT];
    !modeOFF && inRangeTemp -> [temp <- temp];
}

guarantee{
    // eventually off
    X F modeOFF;
}
