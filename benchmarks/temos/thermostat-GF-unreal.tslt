#LIA
//-- State:  temp, mode 
//-- Inputs: sense

// target temp range
LBOUND = int20();
UBOUND = int25();

inRangeTemp = ((gte temp LBOUND) && (lte temp UBOUND));
inRangeSense = ((gte sense LBOUND) && (lte sense UBOUND));

// temp change
TUNIT = int1();

// modes
OFF = int0();
HEAT = int1();
COOL = (sub int0() int1());

modeOFF = (eq mode OFF);
modeHEAT = (eq mode HEAT);
modeCOOL = (eq mode COOL);


assume {
    modeOFF;
}

guarantee {
    modeOFF;
}

always guarantee {
    modeOFF || modeHEAT || modeCOOL;
    
    // mode switching
    modeCOOL && !inRangeTemp -> [mode <- COOL];
    modeHEAT && !inRangeTemp -> [mode <- HEAT];
    (modeCOOL || modeHEAT) && inRangeTemp -> [mode <- OFF];
    modeOFF  && !inRangeSense -> ([mode <- COOL]);  
    modeOFF  &&  inRangeSense -> [mode <- OFF];

    // temp control
    modeOFF  -> [temp <- sense];
    modeHEAT -> [temp <- add temp TUNIT];
    modeCOOL -> [temp <- sub temp TUNIT];
    
    // infinitely often off
    F modeOFF;
}
