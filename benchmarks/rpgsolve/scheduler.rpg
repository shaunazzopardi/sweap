type Buechi

output tasksG Int ; Global task
output boundG Int
output tasksR Int ; Repeated task

input newTasksG Int
input newBoundG Int
input newTasksR Int

loc int 0
loc err 0
loc stageSt 1

loc stage01 0
loc stage02 0
loc stage03 0
loc stage04 0

init int

trans int
    sys (
        ((tasksG newTasksG) (tasksR newTasksR) (boundG newBoundG)) stage01 
        ((tasksG newTasksG) (tasksR (- 0 newTasksR)) (boundG newBoundG)) stage01 
    )

trans err
    err

trans stageSt
    if (<= tasksG boundG) then err else
    sys (
        ((tasksG newTasksG) (tasksR newTasksR) (boundG newBoundG)) stage01 
        ((tasksG newTasksG) (tasksR (- 0 newTasksR)) (boundG newBoundG)) stage01 
    )

trans stage01
    if (> tasksR 0) then sys (((tasksR newTasksR)) stage02) 
                    else sys (((tasksG (+ tasksG 1))) stage01 ((tasksR (+ tasksR 1))) stage01)

trans stage02
    if (> tasksR 0) then sys (((tasksR newTasksR)) stage03) 
                    else sys (((tasksG (+ tasksG 1))) stage02 ((tasksR (+ tasksR 1))) stage02)

trans stage03
    if (> tasksR 0) then sys (((tasksR newTasksR)) stage04) 
                    else sys (((tasksG (+ tasksG 1))) stage03 ((tasksR (+ tasksR 1))) stage03)

trans stage04
    if (> tasksR 0) then stageSt
                    else sys (((tasksG (+ tasksG 1))) stage04 ((tasksR (+ tasksR 1))) stage04)

