#LIA
//-- State: i_y, i_x, loc
//-- Inputs: i_i
guarantee {
[loc  <- int0()];
G ([loc  <- int0()] -> ([i_x <- i_i] && X [loc  <- int1()]) || ([i_y <- (sub i_y int1())] && X [loc  <- int3()]) || false);
G ([loc  <- int1()] -> (((lte i_x int42()) || ((eq i_i int0()))) -> (X [loc  <- int2()]) || false) && ((! ((lte i_x int42()) || ((eq i_i int0()))) ) -> ((gt i_y int32()) -> ([i_x <- (add i_x i_i)] && X [loc  <- int1()]) || false) && ((! (gt i_y int32()) ) -> ([i_x <- (add i_x i_i)] && X [loc  <- int1()]) || ([i_x <- (sub i_x i_i)] && X [loc  <- int1()]) || false)));
G ([loc  <- int2()] -> ([i_y <- int64()] && X [loc  <- int0()]) || false);
G ([loc  <- int3()] -> ((gte i_y int16()) -> (X [loc  <- int0()]) || false) && ((! (gte i_y int16()) ) -> (X [loc  <- int4()]) || false));
G ([loc  <- int4()] -> (X [loc  <- int4()]) || false);
}

guarantee { G F([loc  <- int2()] || [loc  <- int3()] || false);}

