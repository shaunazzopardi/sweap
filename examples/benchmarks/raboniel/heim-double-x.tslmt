#LIA
//-- State: i_y, i_x, loc

guarantee {
[loc  <- int0()];
G ([loc  <- int0()] -> ([i_x <- int1()] && X [loc  <- int1()]) || ([i_y <- (add i_y int1())] && X [loc  <- int0()]) || false);
G ([loc  <- int1()] -> ((eq i_x int64()) -> (X [loc  <- int3()]) || false) && ((! (eq i_x int64()) ) -> ((lte i_y int0()) -> (X [loc  <- int2()]) || false) && ((! (lte i_y int0()) ) -> ([i_x <- (mul i_x int2())] && [i_y <- (sub i_y int1())] && X [loc  <- int1()]) || false)));
G ([loc  <- int2()] -> (X [loc  <- int2()]) || false);
G ([loc  <- int3()] -> (X [loc  <- int3()]) || false);
}

guarantee { F([loc  <- int3()] || false);}

