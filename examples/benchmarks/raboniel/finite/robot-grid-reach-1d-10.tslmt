#LIA
//-- State: i_x, loc

assume{
(ge i_x i0()) && (le i_x i10())
}
guarantee {
[loc  <- i0()];
G ([loc  <- i0()] -> ((eq i_x i0()) -> (X [loc  <- i1()]) || false) && ((! (eq i_x i0()) ) -> (X [loc  <- i0()]) || ([i_x <- (add i_x i1())] && X [loc  <- i0()]) || ([i_x <- (sub i_x i1())] && X [loc  <- i0()]) || false));
G ([loc  <- i1()] -> (X [loc  <- i1()]) || false);
G ((ge i_x i0()) && (le i_x i10()));
}

guarantee { F([loc  <- i1()] || false);}

