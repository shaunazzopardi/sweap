#LIA
//-- State: i_y, i_x, i_ty, i_tx, loc
//-- Inputs: i_nty, i_ntx
guarantee {
[loc  <- int0()];
G ([loc  <- int0()] -> (((eq i_x int0()) && ((eq i_y int0()))) -> (X [loc  <- int2()]) || false) && ((! ((eq i_x int0()) && ((eq i_y int0()))) ) -> (X [loc  <- int0()]) || ([i_x <- (add i_x int1())] && X [loc  <- int0()]) || ([i_x <- (sub i_x int1())] && X [loc  <- int0()]) || ([i_y <- (add i_y int1())] && X [loc  <- int0()]) || ([i_y <- (sub i_y int1())] && X [loc  <- int0()]) || false));
G ([loc  <- int1()] -> (((eq i_x i_tx) && ((eq i_y i_ty))) -> (X [loc  <- int2()]) || false) && ((! ((eq i_x i_tx) && ((eq i_y i_ty))) ) -> (X [loc  <- int1()]) || ([i_x <- (add i_x int1())] && X [loc  <- int1()]) || ([i_x <- (sub i_x int1())] && X [loc  <- int1()]) || ([i_y <- (add i_y int1())] && X [loc  <- int1()]) || ([i_y <- (sub i_y int1())] && X [loc  <- int1()]) || false));
G ([loc  <- int2()] -> (((eq i_x int0()) && ((eq i_y int0()))) -> ([i_tx <- i_ntx] && [i_ty <- i_nty] && X [loc  <- int1()]) || false) && ((! ((eq i_x int0()) && ((eq i_y int0()))) ) -> (X [loc  <- int0()]) || false));
}

guarantee { G F([loc  <- int2()] || false);}

