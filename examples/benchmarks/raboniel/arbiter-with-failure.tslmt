#LIA
//-- State: floor, target
//-- Inputs: signal

assume {
  eq int0() q;
}

always assume {
    (eq success int0()) || (eq success int1())
}

always guarantee {
  (eq q int0()) -> ([cnt <- env_cnt] && [q <- int1()]);
  [cnt <- sub cnt int1()] -> ((eq q int1()) && (eq success int1()) && [q <- q]);
  ([cnt <- sub cnt int1()] || [cnt <- cnt] || [q <- q] || [q <- int0()] || [q <- int1()]);
  (G F (eq success int1())) -> G (((eq q int1()) && [q <- int0()]) -> (eq cnt int0())));
}
