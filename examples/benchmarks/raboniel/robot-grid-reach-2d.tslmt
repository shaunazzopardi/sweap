#LIA
//-- State: i_y, i_x, loc

guarantee {
[loc  <- int0()];
G ([loc  <- int0()] -> (((eq i_x int0()) && ((eq i_y int0()))) -> (X [loc  <- int1()]) || false) && ((! ((eq i_x int0()) && ((eq i_y int0()))) ) -> (X [loc  <- int0()]) || ([i_x <- (add i_x int1())] && X [loc  <- int0()]) || ([i_x <- (sub i_x int1())] && X [loc  <- int0()]) || ([i_y <- (add i_y int1())] && X [loc  <- int0()]) || ([i_y <- (sub i_y int1())] && X [loc  <- int0()]) || false));
G ([loc  <- int1()] -> (X [loc  <- int1()]) || false);
}

guarantee { F([loc  <- int1()] || false);}

