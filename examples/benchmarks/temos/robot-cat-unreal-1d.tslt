#LIA
//-- State: i_ox, i_rx, loc
//-- Inputs: i_inc, i_stay
guarantee {
[loc  <- i0()];
G ([loc  <- i0()] -> (X [loc  <- i1()]) || false);
G ([loc  <- i1()] -> ((eq i_rx i_ox) -> (X [loc  <- i4()]) || false) && ((! (eq i_rx i_ox) ) -> ((eq i_rx i0()) -> (X [loc  <- i3()]) || false) && ((! (eq i_rx i0()) ) -> ([i_rx <- i_rx] && X [loc  <- i2()]) || ([i_rx <- (add i_rx i1())] && X [loc  <- i2()]) || ([i_rx <- (sub i_rx i1())] && X [loc  <- i2()]) || false)));
G ([loc  <- i2()] -> ((eq i_stay i1()) -> ([i_ox <- i_ox] && X [loc  <- i1()]) || false) && ((! (eq i_stay i1()) ) -> ((eq i_inc i1()) -> ([i_ox <- (add i_ox i1())] && X [loc  <- i1()]) || false) && ((! (eq i_inc i1()) ) -> ([i_ox <- (sub i_ox i1())] && X [loc  <- i1()]) || false)));
G ([loc  <- i3()] -> (X [loc  <- i3()]) || false);
G ([loc  <- i4()] -> (X [loc  <- i4()]) || false);
}

guarantee { F([loc  <- i3()] || false);}

