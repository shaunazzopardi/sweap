#LIA
//-- State: floor, target
//-- Inputs: signal

assume {
  eq i0() q;
}

always assume {
    (eq room i0()) || (eq room i1())
    (geq env_cnt i0()) && (leq env_cnt i50())
}

always guarantee {
  G ((geq cnt i0()) && (leq cnt i50()));
  (eq q i0()) -> ([cnt <- env_cnt] && [env_room <- room] && [q <- i1()]);
  ((eq q i1()) && (geq cnt i0())) -> (([cnt <- sub cnt i1()] || [q <- i0()]));
  ((eq q i1()) && (not (eq cnt i0())) && (not (eq con_room env_room))) -> [q <- i2()];
  ((eq q i2()) ) -> (([con_room <- true()] || [con_room <- false()]) && [q <- i1()]);
  ((eq q i1()) && (not (eq cnt i0())) && ((eq con_room env_room))) -> ([q <- i1()] && ([cnt <- sub cnt 1] || [cnt <- cnt]));

  G F (eq q i0());
}
