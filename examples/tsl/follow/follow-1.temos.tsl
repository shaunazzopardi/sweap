//-- State: x, y, xe, ye
//-- Inputs: env_x_move, env_y_move
//#LIA#

assume {
  (eq x c0());
  (eq y c0());
  (eq xe c0());
  (eq ye c0());
}

always assume {
  eq env_x_move c1() || eq env_x_move im1() || eq env_x_move c0();
  eq env_y_move c1() || eq env_y_move im1() || eq env_y_move c0();
}

always guarantee {
  ge x c0(); /* INV */
  le x c1(); /* INV */
  ge y c0(); /* INV */
  le y c1(); /* INV */
  ge xe c0(); /* INV */
  le xe c1(); /* INV */
  ge ye c0(); /* INV */
  le ye c1(); /* INV */

  ((((eq c0() (sub ye y)) && (lt (sub xe x) c2())) ||
  ((eq c0() (sub xe x)) && (lt (sub ye y) c2())) ||
  ((lt c1() (sub xe x)) && (lt (sub ye y) c1()))));


  ([x <- x] || [x <- add x c1()] || [x <- sub x c1()]);
  ([y <- y] || [y <- add y c1()] || [y <- sub y c1()]);
  [xe <- add xe env_x_move];
  [ye <- add ye env_y_move];
}
