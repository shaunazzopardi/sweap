concurrent concurrent-safety-response {

    program A {
        STATES {
            l1 : init, l2, l3, l3_int, l4, l5, l6, l7, l8, l9
        }

        ENVIRONMENT EVENTS {
        }

        CONTROLLER EVENTS {
            set_t1b_false, set_t1b_true
        }

        PROGRAM EVENTS {
            at_l4_A, at_l8_A
        }

        VALUATION {
            f1a : boolean := false;
            f2a : boolean := false;
            f1b : boolean := false;
            f2b : boolean := false;
            t1b : boolean := false;
            t2b : boolean := false;
        }

        ENVIRONMENT TRANSITIONS {
            l1 -> l2 [$ f1a := true],
            l2 -> l3_int [],
            l3 -> l3 [f1b & t1b],
            l3 -> l4 [!f1b | !t1b # at_l4_A],
            l4 -> l5 [$ f1a := false],
            l5 -> l6 [t1b $ f2a := true],
            l5 -> l9 [t1b $],
            l6 -> l7 [$ t2b := true],
            l7 -> l7 [f2b & t2b],
            l7 -> l8 [!(f2b & t2b)],
            l8 -> l9 [$ f2a := false # at_l8_A],
            l9 -> l1 []
        }

        CONTROLLER TRANSITIONS {
            l3_int -> l3 [set_t1b_false & !set_t1b_true $ t1b := false],
            l3_int -> l3 [set_t1b_true & !set_t1b_false $ t1b := true]
        }
    }

    program B {
        STATES {
            l1 : init, l2, l3, l4, l5, l6, l7, l8, l9
        }

        ENVIRONMENT EVENTS {
        }

        CONTROLLER EVENTS {
        }

        PROGRAM EVENTS {
            at_l4_B, at_l7_B
        }

        VALUATION {
            f1a : boolean := false;
            f2a : boolean := false;
            f1b : boolean := false;
            f2b : boolean := false;
            t1b : boolean := false;
            t2b : boolean := false;
        }

        ENVIRONMENT TRANSITIONS {
            l1 -> l2 [$ f1b := true],
            l2 -> l3 [$ t1b := false],
            l3 -> l2 [f1a & !t1b],
            l3 -> l4 [!f1a | t1b],
            l4 -> l5 [$ f1b := true # at_l4_B],
            l5 -> l6 [$ t2b := false],
            l6 -> l6 [f2a & !t2b],
            l6 -> l7 [!f2a | t2b],
            l7 -> l8 [$ f2b := false # at_l7_B],
            l8 -> l9 [$ f1b := false],
            l9 -> l1 []
        }

        CONTROLLER TRANSITIONS {
        }
    }

}