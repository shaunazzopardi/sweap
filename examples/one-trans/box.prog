program diagonal {
    STATES {
        q : init
    }

    ENVIRONMENT EVENTS {
        incxe; decxe; incye; decye;
    }

    CONTROLLER EVENTS {
        incxc; decxc; incyc; decyc;
    }

    PROGRAM EVENTS {
    }

    VALUATION {
        x : integer := 0;
        y : integer := 0;
    }

    TRANSITIONS {
        q -> q [incxe && incxe && !(decxe || decxc) $ x := x + 2],
        q -> q [((incxe && !incxe) || (!incxe && incxe)) && !(decxe || decxc) $ x := x + 1],
        q -> q [((!incxe && !incxe)) && !(decxe || decxc) $ x := x],

        q -> q [incye && incye && !(decye || decyc) $ y := y + 2],
        q -> q [((incye && !incye) || (!incye && incye)) && !(decxe || decxc) $ y := y + 1],
        q -> q [((!incye && !incye)) && !(decye || decyc) $ y := y]
        }

    SPECIFICATION {
        G (x >= 0 && x <= 2)
    }
}