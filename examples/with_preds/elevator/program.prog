program eventually__allow_grant {
    STATES {
        q0 : init, q1
    }

    ENVIRONMENT EVENTS {
        inc, dooropen
    }

    CONTROLLER EVENTS {
        up, down, notify
    }

    PROGRAM EVENTS {
    }

    VALUATION {
        target : integer := 0;
        at_floor : integer := 0;
    }

    ENVIRONMENT TRANSITIONS {
        q0 -> q0 [inc && dooropen $ target := target + 1;],
        q0 -> q0 [!inc && dooropen $ target := target - 1;],
        q0 -> q1 [!dooropen]
    }

    CONTROLLER TRANSITIONS {
        q1 -> q1 [up & !down $ at_floor := at_floor + 1],
        q1 -> q1 [!up & down $ at_floor := at_floor - 1]
    }

    SPECIFICATION{
         ((G F dooropen) && (G F (!dooropen)))
         ->
         ((G F (!(at_floor < target) && !(at_floor > target))) &&
          G(dooropen -> (up <-> down)) &&
          (G F notify) &&
          G(notify -> X ((!(at_floor < target) && !(at_floor > target)))))
    }
}