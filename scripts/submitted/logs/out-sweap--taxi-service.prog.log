Processing program.
spec contains 4 APs (['(car_x == target_x)', '(car_y == target_y)', 'start', 'obstacle'])
Starting abstract synthesis loop.
adding (target_x <= 0), (car_x_prev < car_x), (car_y >= 0), (car_x_prev > car_x), (target_y <= car_y), (target_x_prev < target_x), (car_x <= 0), (target_x <= car_x), (target_x >= 0), (target_x_prev > target_x), ((car_x > target_x) || (car_x < target_x)), ((target_x_prev - car_x_prev) < (target_x - car_x)), (car_y_prev < car_y), ((car_x_prev - target_x_prev) > (car_x - target_x)), ((car_y_prev - target_y_prev) < (car_y - target_y)), (car_x <= target_x), ((target_x_prev - car_x_prev) > (target_x - car_x)), (car_y_prev > car_y), ((car_y_prev - target_y_prev) > (car_y - target_y)), (car_x >= 0), (car_y <= 0), ((car_x_prev - target_x_prev) < (car_x - target_x)), ((car_y > target_y) || (car_y < target_y)), ((target_y_prev - car_y_prev) < (target_y - car_y)), (target_y_prev > target_y), (target_y >= 0), ((target_y_prev - car_y_prev) > (target_y - car_y)), (target_y <= 0), (target_y_prev < target_y), (car_y <= target_y) to predicate abstraction
